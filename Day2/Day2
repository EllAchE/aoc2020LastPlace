# Suppose you have the following list:
#
# 1-3 a: abcde
# 1-3 b: cdefg
# 2-9 c: ccccccccc
#
# Each line gives the password policy and then the password. The password policy indicates the lowest and highest
# number of times a given letter must appear for the password to be valid. For example, 1-3 a means that the password
# must contain a at least 1 time and at most 3 times.
#
# In the above example, 2 passwords are valid. The middle password, cdefg, is not; it contains no instances of b,
# but needs at least 1. The first and third passwords are valid: they contain one a or nine c, both within the limits
# of their respective policies.
#
# How many passwords are valid according to their policies?

import re

data = open("input.txt", "r")
# copy the data to a list
lst = [d for d in data]


def process(value):
    value = re.split("[:, ,-]", value[0:-1])
    minimum = int(value[0])
    maximum = int(value[1])
    character = value[2]
    password = value[4]
    # print(minimum, maximum, character, password)

    matchcount = 0
    for c in password:
        if c == character:
            matchcount += 1
    # print(character, matchcount, password)
    if minimum <= matchcount <= maximum:
        return 1
    return 0


count = 0
for line in lst:
    count += process(line)
print(count)
